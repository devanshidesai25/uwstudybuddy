{"ast":null,"code":"import React,{useState}from'react';import Header from'./Header';import Footer from'./Footer';import profiles from'./profileData';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ProfileForm=()=>{const[formData,setFormData]=useState({name:'',image:null,major:'',grade:'',email:'',bio:''});const[filteredProfiles,setFilteredProfiles]=useState([]);const[selectedProfiles,setSelectedProfiles]=useState([]);const handleChange=e=>{const{name,value,files}=e.target;setFormData(prevState=>({...prevState,[name]:name==='image'?files[0]:value}));};const handleSubmit=e=>{e.preventDefault();try{localStorage.setItem('profileData',JSON.stringify(formData));alert('Profile saved successfully!');setFormData({name:'',image:null,major:'',grade:'',email:'',bio:''});const filtered=profiles.filter(profile=>profile.major===formData.major||profile.grade===formData.grade);setFilteredProfiles(filtered);}catch(error){console.error('Error saving profile:',error);alert('Error saving profile. Please try again later.');}};const handleProfileClick=profile=>{if(isProfileSelected(profile)){setSelectedProfiles(prevSelected=>prevSelected.filter(p=>p.id!==profile.id));}else{setSelectedProfiles(prevSelected=>[...prevSelected,profile]);}};const isProfileSelected=profile=>{return selectedProfiles.includes(profile);};const handleSendEmail=()=>{if(selectedProfiles.length===0){alert('Please select at least one profile to send an email.');return;}const emailList=selectedProfiles.map(profile=>profile.email).join(';');const subject='Your Subject';const body='Your email body content.';const mailtoLink=\"mailto:\".concat(emailList,\"?subject=\").concat(encodeURIComponent(subject),\"&body=\").concat(encodeURIComponent(body));window.location.href=mailtoLink;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsx(\"h2\",{id:\"submit-title\",children:\"Submit Your Profile\"}),/*#__PURE__*/_jsx(\"p\",{id:\"desc\",children:\"Once you submit, scroll down to view recommended profiles based on your year & major!\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"profile-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Image:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"image\",accept:\"image/*\",onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Major:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"major\",value:formData.major,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email-\".concat(formData.id),value:formData[\"email-\".concat(formData.id)],onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Grade:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"grade\",value:formData.grade,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Freshman\",children:\"Freshman\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Sophomore\",children:\"Sophomore\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Junior\",children:\"Junior\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Senior\",children:\"Senior\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Bio:\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"bio\",value:formData.bio,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Find Friends!\"}),/*#__PURE__*/_jsx(\"p\",{id:\"desc2\",children:\"After submitting, click on which profiles you'd like to contact. Email one at a time, or select multiple profile cards and click the email button on any of them to send a group email!\"})]})]}),/*#__PURE__*/_jsx(\"div\",{children:filteredProfiles.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"allCards\",children:filteredProfiles.map(profile=>/*#__PURE__*/_jsx(\"div\",{className:\"card \".concat(isProfileSelected(profile)?'selected':''),onClick:()=>handleProfileClick(profile),children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:profile.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[\"Major: \",profile.major]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[\"Email: \",profile.email]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[\"Grade: \",profile.grade]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[\"Bio: \",profile.bio]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendEmail,children:\"Send an Email!\"})]})},profile.id))})}),/*#__PURE__*/_jsx(Footer,{})]});};export default ProfileForm;","map":{"version":3,"names":["React","useState","Header","Footer","profiles","jsx","_jsx","jsxs","_jsxs","ProfileForm","formData","setFormData","name","image","major","grade","email","bio","filteredProfiles","setFilteredProfiles","selectedProfiles","setSelectedProfiles","handleChange","e","value","files","target","prevState","handleSubmit","preventDefault","localStorage","setItem","JSON","stringify","alert","filtered","filter","profile","error","console","handleProfileClick","isProfileSelected","prevSelected","p","id","includes","handleSendEmail","length","emailList","map","join","subject","body","mailtoLink","concat","encodeURIComponent","window","location","href","children","className","onSubmit","type","onChange","required","accept","onClick"],"sources":["/Users/devanshidesai/Desktop/INFO340/studdybuddyuw/src/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport profiles from './profileData';\n\nconst ProfileForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    image: null,\n    major: '',\n    grade: '',\n    email: '',\n    bio: ''\n  });\n\n  const [filteredProfiles, setFilteredProfiles] = useState([]);\n  const [selectedProfiles, setSelectedProfiles] = useState([]);\n\n  const handleChange = (e) => {\n    const { name, value, files } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: name === 'image' ? files[0] : value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      localStorage.setItem('profileData', JSON.stringify(formData));\n      alert('Profile saved successfully!');\n      setFormData({\n        name: '',\n        image: null,\n        major: '',\n        grade: '',\n        email: '',\n        bio: ''\n      });\n\n      const filtered = profiles.filter(profile =>\n        profile.major === formData.major || profile.grade === formData.grade\n      );\n      setFilteredProfiles(filtered);\n    } catch (error) {\n      console.error('Error saving profile:', error);\n      alert('Error saving profile. Please try again later.');\n    }\n  };\n\n  const handleProfileClick = (profile) => {\n    if (isProfileSelected(profile)) {\n      setSelectedProfiles(prevSelected => prevSelected.filter(p => p.id !== profile.id));\n    } else {\n      setSelectedProfiles(prevSelected => [...prevSelected, profile]);\n    }\n  };\n\n  const isProfileSelected = (profile) => {\n    return selectedProfiles.includes(profile);\n  };\n\n  const handleSendEmail = () => {\n    if (selectedProfiles.length === 0) {\n      alert('Please select at least one profile to send an email.');\n      return;\n    }\n    \n    const emailList = selectedProfiles.map(profile => profile.email).join(';');\n    const subject = 'Your Subject';\n    const body = 'Your email body content.';\n    const mailtoLink = `mailto:${emailList}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n    \n    window.location.href = mailtoLink;\n  };\n  \n\n  return (\n    <div>\n      <Header />\n      <div className=\"profile-container\">\n        <h2 id='submit-title'>Submit Your Profile</h2>\n        <p id='desc'>Once you submit, scroll down to view recommended profiles based on your year & major!</p>\n        <form className=\"profile-form\" onSubmit={handleSubmit}>\n          <div>\n            <label>Name:</label>\n            <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\n          </div>\n          <div>\n            <label>Image:</label>\n            <input type=\"file\" name=\"image\" accept=\"image/*\" onChange={handleChange} />\n          </div>\n          <div>\n            <label>Major:</label>\n            <input type=\"text\" name=\"major\" value={formData.major} onChange={handleChange} required />\n          </div>\n          <div>\n            <label>Email:</label>\n            <input type=\"email\" name={`email-${formData.id}`} value={formData[`email-${formData.id}`]} onChange={handleChange} required />\n          </div>\n          <div>\n            <label>Grade:</label>\n            <select name=\"grade\" value={formData.grade} onChange={handleChange}>\n              <option value=\"Freshman\">Freshman</option>\n              <option value=\"Sophomore\">Sophomore</option>\n              <option value=\"Junior\">Junior</option>\n              <option value=\"Senior\">Senior</option>\n            </select>\n          </div>\n          <div>\n            <label>Bio:</label>\n            <textarea name=\"bio\" value={formData.bio} onChange={handleChange}></textarea>\n          </div>\n          <button type=\"submit\">Find Friends!</button>\n          <p id='desc2'>After submitting, click on which profiles you'd like to contact. Email one at a time, or select multiple profile cards and click the email button on any of them to send a group email!</p>\n        </form>\n      </div>\n      <div>\n        {filteredProfiles.length > 0 && (\n          <div className='allCards'>\n            {filteredProfiles.map(profile => (\n              <div\n                key={profile.id}\n                className={`card ${isProfileSelected(profile) ? 'selected' : ''}`}\n                onClick={() => handleProfileClick(profile)}\n              >\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{profile.name}</h5>\n                  <p className=\"card-text\">Major: {profile.major}</p>\n                  <p className=\"card-text\">Email: {profile.email}</p>\n                  <p className=\"card-text\">Grade: {profile.grade}</p>\n                  <p className=\"card-text\">Bio: {profile.bio}</p>\n                  <button onClick={handleSendEmail}>Send an Email!</button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ProfileForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}